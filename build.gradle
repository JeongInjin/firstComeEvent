plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl 추가 (1)querydsl 플러그인을 추가합니다.
    id 'java'
}

group = 'com.me.injin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'

    implementation("org.projectlombok:lombok")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    implementation("org.springframework.boot:spring-boot-starter-data-redis")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.querydsl:querydsl-jpa' //querydsl 추가 (2)라이브러리 dependency 를 추가합니다.
    runtimeOnly 'com.h2database:h2'
    implementation("com.google.code.gson:gson:2.8.9")

    testCompileOnly("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    testImplementation("org.awaitility:awaitility:4.1.1")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

test {
    useJUnitPlatform()
}
//querydsl 추가 시작 ------------------------------------------------------------------------------------
def querydslDir = "$buildDir/generated/querydsl" // (3)querydsl 에서 사용할 경로를 선언합니다.

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}
